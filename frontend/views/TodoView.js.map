{"version":3,"file":"TodoView.js","sourceRoot":"","sources":["TodoView.tsx"],"names":[],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\nimport Todo from \"Frontend/generated/com/example/application/model/Todo\";\nimport {TodoEndpoint} from \"Frontend/generated/endpoints\";\nimport {TextField} from \"@hilla/react-components/TextField\";\nimport {Button} from \"@hilla/react-components/Button\";\nimport {Checkbox} from \"@hilla/react-components/Checkbox\";\nimport TodoResponse from \"Frontend/generated/com/example/application/dto/TodoResponse\";\nimport {VerticalLayout} from \"@hilla/react-components/VerticalLayout\";\nimport {HorizontalLayout} from \"@hilla/react-components/HorizontalLayout\";\n\nexport default function TodoView() {\n  const [todoResponse, setTodoResponse] = useState<TodoResponse>(\n      {completed: [], unCompleted: []}\n  );\n  const [task, setTask] = useState('');\n  useEffect(() => {\n    TodoEndpoint.findAll().then(setTodoResponse)\n  }, []);\n\n  async function addTodo() {\n    const savedTodo = await TodoEndpoint.add(task)\n    if (savedTodo) {\n      const updatedResponse = await TodoEndpoint.findAll()\n      setTodoResponse(updatedResponse)\n      setTask(\"\")\n      const inputTask: HTMLElement = document.getElementById(\"inputTask\")!;\n      inputTask.focus()\n    }\n  }\n\n  async function updateTodo(todo: Todo, value: boolean) {\n    todo.completed = value\n    const updatedTodo: Todo = await TodoEndpoint.update(todo);\n    if (updatedTodo) {\n      const updatedResponse = await TodoEndpoint.findAll()\n      setTodoResponse(updatedResponse);\n    }\n  }\n\n  return <div style={{alignItems: 'center'}}>\n    <HorizontalLayout theme=\"margin\">\n      <h2>Hilla Todo Application</h2>\n    </HorizontalLayout>\n\n    <HorizontalLayout theme=\"margin\" className=\"flex gap-s\">\n      <TextField value={task} autoFocus={true} id={\"inputTask\"}\n                 onChange={e => {\n                   setTask(e.target.value)\n                 }}\n      />\n      <Button theme=\"primary\" onClick={e => {\n        addTodo()\n      }}>Add</Button>\n    </HorizontalLayout>\n    <VerticalLayout theme=\"spacing padding margin\" className='border border-error-50 rounded-m'>\n      {\n        (todoResponse.unCompleted as [Todo]).map(uncompleted =>\n            <div key={uncompleted.id} >\n              <Checkbox checked={uncompleted?.completed}\n                        onCheckedChanged={e => updateTodo(uncompleted, e.detail.value)}/>\n              <span>{uncompleted.task}</span>\n            </div>)\n      }\n    </VerticalLayout>\n    <VerticalLayout theme=\"spacing padding margin\" className='border border-primary-50 rounded-m'>\n      {\n        (todoResponse.completed as [Todo]).map(completed =>\n            <div key={completed.id}>\n              <span><s>{completed.task}</s></span>\n            </div>)\n      }\n    </VerticalLayout>\n\n  </div>;\n}"]}